{"version":3,"sources":["components/Timer/Timer.module.css","components/Timer/audio.ts","components/Timer/Timer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","makeSound","acontext","AudioContext","o","createOscillator","type","connect","destination","start","setTimeout","stop","playAudio","a","cb","audio","document","getElementById","console","log","src","play","pause","currentTime","error","Modal","setAppElement","sampleCheckpoint","Map","set","hours","mins","sec","Checkpoints","props","useState","isModalOpen","setIsModalOpen","value","setValue","checkpoints","setCheckpoints","closeModal","cpElements","forEach","val","key","map","push","style","textAlign","onClick","window","confirm","filteredCps","delete","deleteCheckpoint","className","styles","addCheckpointButton","isOpen","onAfterOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","contentLabel","onSubmit","e","preventDefault","numArr","toString","split","reverse","newArr","Array","fill","num","i","newCp","newCpMap","size","autoFocus","onChange","target","length","Timer","minutes","setMinutes","seconds","setSeconds","setHours","clicked","setClicked","undefined","timer","setTimer","startTimer","secondsLeft","parseInt","interval","setInterval","hoursLeft","Math","floor","minsLeft","secsLeft","clearTimer","location","reload","clearInterval","useEffect","mainContainer","timerContainer","timerInputContainer","placeholder","disabled","buttonContainer","startButton","stopButton","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8850cda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Timer_mainContainer__3iS8I\",\"timerInputContainer\":\"Timer_timerInputContainer__uM38l\",\"buttonContainer\":\"Timer_buttonContainer__2B0bf\",\"startButton\":\"Timer_startButton__3c-Zf\",\"stopButton\":\"Timer_stopButton__2l7xL\",\"addCheckpointButton\":\"Timer_addCheckpointButton__2kT3L\"};","// import gong from '../../assets/';\n\nexport const makeSound = () => {\n  var acontext = new AudioContext();\n  var o = acontext.createOscillator();\n  o.type = 'sine';\n  o.connect(acontext.destination);\n  o.start();\n  setTimeout(() => {\n    o.stop();\n    // o.close();\n  }, 1500);\n};\n\n// const makeSound = (vol=10, freq=1, duration=1000) => {\n//   v=a.createOscillator()\n//   u=a.createGain()\n//   v.connect(u)\n//   v.frequency.value=freq\n//   v.type=\"square\"\n//   u.connect(a.destination)\n//   u.gain.value=vol*0.01\n//   v.start(a.currentTime)\n//   v.stop(a.currentTime+duration*0.001)\n// }\nexport const playAudio = async (cb = () => {}) => {\n  // const videoUrl = 'http://www.orangefreesounds.com/wp-content/uploads/2014/11/Gong-sound.mp3';\n  // const videoUrl =\n  //  'https://file-examples.com/wp-content/uploads/2017/11/file_example_MP3_700KB.mp3';\n  // const videoUrl = '../../assets/gong.mp3';\n  // var audio = new Audio(videoUrl);\n  var audio = document.getElementById('audio-element') as HTMLAudioElement;\n\n  console.log(audio.src);\n  // audio.type = 'audio/mp3';\n  try {\n    await audio.play();\n    console.log('Playing...');\n    // console.log(audio);\n    setTimeout(() => {\n      audio.pause();\n      audio.currentTime = 0;\n\n      cb();\n    }, 4000);\n  } catch (err) {\n    console.log('Failed to play...');\n    console.error(err);\n    makeSound();\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport styles from './Timer.module.css';\nimport { playAudio } from './audio';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\nlet sampleCheckpoint = new Map();\nsampleCheckpoint.set(0, { hours: '00', mins: '34', sec: '59' });\nsampleCheckpoint.set(1, { hours: '00', mins: '19', sec: '39' });\nsampleCheckpoint.set(2, { hours: '00', mins: '04', sec: '19' });\n\nconst Timer = () => {\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [hours, setHours] = useState('00');\n  const [value, setValue] = useState('');\n  const [clicked, setClicked] = useState(false);\n  const [timer, setTimer] = useState<number | undefined>(undefined);\n  const [checkpoints, setCheckpoints] = useState(sampleCheckpoint);\n\n  const startTimer = () => {\n    let secondsLeft =\n      parseInt(hours) * 3600 + parseInt(minutes) * 60 + parseInt(seconds);\n    if (secondsLeft === 0) return;\n    setClicked(true);\n\n    let interval = window.setInterval(() => {\n      const hoursLeft = Math.floor(secondsLeft / 3600);\n      const minsLeft = Math.floor(secondsLeft / 60) - hoursLeft * 60;\n      const secsLeft = secondsLeft - (minsLeft * 60 + hoursLeft * 3600);\n\n      secsLeft < 10\n        ? setSeconds(`0${secsLeft}`)\n        : setSeconds(secsLeft.toString());\n      minsLeft < 10\n        ? setMinutes(`0${minsLeft}`)\n        : setMinutes(minsLeft.toString());\n      hoursLeft < 10\n        ? setHours(`0${hoursLeft}`)\n        : setHours(hoursLeft.toString());\n\n      if (secondsLeft === 0) {\n        playAudio(() => {\n          clearTimer();\n          window.location.reload();\n        });\n\n        // clearTimer();\n        // window.location.reload();\n      }\n      checkpoints.forEach((val, key, map) => {\n        const { hours, mins, sec } = val;\n        if (\n          hoursLeft === parseInt(hours) &&\n          minsLeft === parseInt(mins) &&\n          secsLeft === parseInt(sec)\n        )\n          playAudio();\n      });\n      if (secondsLeft !== 0) secondsLeft--;\n    }, 1000);\n    setTimer(interval);\n  };\n\n  const clearTimer = () => {\n    clearInterval(timer);\n    setValue('');\n    setClicked(false);\n    setMinutes('00');\n    setSeconds('00');\n    setHours('00');\n  };\n\n  useEffect(() => {\n    const numArr = value.toString().split('').reverse();\n\n    let newArr = new Array(6).fill('0');\n    numArr.forEach((num, i) => {\n      newArr[i] = num;\n    });\n    newArr = newArr.reverse();\n\n    setHours(`${newArr[0]}${newArr[1]}`);\n    setMinutes(`${newArr[2]}${newArr[3]}`);\n    setSeconds(`${newArr[4]}${newArr[5]}`);\n  }, [value]);\n\n  return (\n    <div className={styles.mainContainer}>\n      <h1>Meditation Timer</h1>\n      <div className={styles.timerContainer}>\n        {hours}h &nbsp;\n        {minutes}m&nbsp;\n        {seconds}s&nbsp;\n      </div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          startTimer();\n        }}\n      >\n        <input\n          className={styles.timerInputContainer}\n          value={clicked ? '' : value}\n          autoFocus={true}\n          placeholder=\"Enter desired time\"\n          onChange={(e) => {\n            if (e.target.value.length <= 6) setValue(e.target.value);\n          }}\n          type=\"number\"\n          disabled={clicked}\n        />\n      </form>\n      <div className={styles.buttonContainer}>\n        {!clicked && (\n          <button\n            onClick={startTimer}\n            className={styles.startButton}\n            disabled={clicked}\n          >\n            Start\n          </button>\n        )}\n        {clicked && (\n          <button onClick={clearTimer} className={styles.stopButton}>\n            Stop\n          </button>\n        )}\n      </div>\n      <Checkpoints checkpoints={checkpoints} setCheckpoints={setCheckpoints} />\n    </div>\n  );\n};\n\ninterface CheckpointsProps {\n  checkpoints: Map<any, any>;\n  setCheckpoints: React.Dispatch<React.SetStateAction<Map<any, any>>>;\n}\n\ninterface CheckpointsMap {\n  hours: string;\n  mins: string;\n  sec: string;\n}\n\nconst Checkpoints = (props: CheckpointsProps) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const { checkpoints, setCheckpoints } = props;\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n  const closeModal = () => setIsModalOpen(false);\n\n  const addCheckoint = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const numArr = value.toString().split('').reverse(); //[3,2,1]\n\n    let newArr = new Array(6).fill('0');\n    numArr.forEach((num, i) => {\n      newArr[i] = num;\n    });\n    newArr = newArr.reverse();\n\n    let newCp: CheckpointsMap = {} as CheckpointsMap;\n    newCp['hours'] = `${newArr[0]}${newArr[1]}`;\n    newCp['mins'] = `${newArr[2]}${newArr[3]}`;\n    newCp['sec'] = `${newArr[4]}${newArr[5]}`;\n\n    const newCpMap = new Map(checkpoints);\n    newCpMap.set(newCpMap.size + 1, newCp);\n    setCheckpoints(newCpMap);\n    closeModal();\n    setValue('');\n  };\n\n  const deleteCheckpoint = (key: number): void => {\n    if (!window.confirm('Do you want to delete this checkpoint?')) return;\n\n    let filteredCps = new Map(checkpoints);\n    // Object.values(checkpoints).forEach((cp, i) => {\n    //   if (i !== index) {\n    //     filteredCps[index] = cp;\n    //   }\n    // });\n    filteredCps.delete(key);\n\n    setCheckpoints(filteredCps);\n  };\n\n  let cpElements: JSX.Element[] = [];\n  checkpoints.forEach((val, key, map) => {\n    const { hours, mins, sec } = val;\n    cpElements.push(\n      <p\n        style={{ textAlign: 'center' }}\n        onClick={() => deleteCheckpoint(key)}\n        key={key}\n      >{`${hours}h ${mins}m ${sec}s`}</p>\n    );\n  });\n\n  return (\n    <div>\n      <h3 style={{ textAlign: 'center' }}>Checkpoints</h3>\n\n      {cpElements}\n      <button\n        onClick={() => setIsModalOpen(true)}\n        className={styles.addCheckpointButton}\n      >\n        Add Checkpoint\n      </button>\n      <Modal\n        isOpen={isModalOpen}\n        onAfterOpen={() => null}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <form onSubmit={addCheckoint}>\n          <input\n            value={value}\n            autoFocus={true}\n            onChange={(e) => {\n              if (e.target.value.length <= 6) setValue(e.target.value);\n            }}\n            type=\"number\"\n          />\n          {/* <button onClick={() => addCheckoint()}>Add Checkpoint</button> */}\n          <input type=\"submit\" value=\"Add Checkpoint\" />\n        </form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\nimport Timer from './components/Timer/Timer';\n\nfunction App() {\n  return <Timer />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}